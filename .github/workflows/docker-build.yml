name: Docker Image CI

on:
  workflow_dispatch: # Manual trigger with optional tagName input
    inputs:
      tagName:
        description: 'Tag to build (e.g., v1.2.3). Leave empty for auto mode (default branch push).'
        required: false
  push:
    branches:
      - master # Automatic trigger on push to master branch

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  IMAGE_DESCRIPTION: "Unofficial image build of xenocrat/chyrp-lite"

jobs:
  build-and-push-docker-image:
    runs-on: ubuntu-latest

    steps:
      # Check out a specific tag for manual runs or the pushed ref (branch or tag)
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.tagName || github.ref }}


      # Set up QEMU to build for multiple architectures
      - name: Set up QEMU (optional for multi-architecture)
        uses: docker/setup-qemu-action@v3

      # Use Docker's extended build system that supports building
      # multi-architecture images
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Log into Container Registry using GitHub Actions token
      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Determine the version tag based on the trigger event
      # For push events on tags, it extracts the tag name
      # For workflow_dispatch, it uses the tagName input
      # The Git tag is used as the Docker tag
      - name: Determine the version tag
        id: vars
        if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') }}
        run: echo "VERSION_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      # Generate metadata for the Docker image, such as tags and
      # labels, based on Git tags/refs
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          # Use the provided tagName from workflow_dispatch or the commit SHA for push events
          # If using a tagName, tag `:latest`
          tags: |
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha
            type=raw,value=latest,enable=${{ startsWith(github.ref, 'refs/tags/') }}

      # Guild and push image using the generated metadata
      # If the workflow was triggered by a tag, the image will use that tag
      # If it was triggered by a push to master, it will use the commit SHA
      - name: Build and Push Docker Image to GHCR
        uses: docker/build-push-action@v5
        with:
          context: . # Set the build context to the current directory
          platforms: linux/amd64,linux/arm64 # Specifies the target architectures
          push: true # Enable pushing the image after a successful build
          tags: ${{ steps.meta.outputs.tags }} # Use the tags generated by the metadata action
          labels: |
            ${{ steps.meta.outputs.labels }}
            org.opencontainers.image.description=${{ env.IMAGE_DESCRIPTION }}

